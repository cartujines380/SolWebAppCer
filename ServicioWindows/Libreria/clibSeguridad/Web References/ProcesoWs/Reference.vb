'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace ProcesoWs
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServBaseProcesoSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class ServBaseProceso
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private envioCorreoLiciOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getHorarioCitasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private setSolpedidoCrossOperationCompleted As System.Threading.SendOrPostCallback
        
        Private setSolcitudCitaCEROperationCompleted As System.Threading.SendOrPostCallback
        
        Private getConsultaEANOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaArtBapiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private copiaXMLRINEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private copiaTXTRINEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsInformacionSeguraUsuarioFSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getActualizaContactoListBDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getActualizaContactoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProveedorContactoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProveedorContactoListCiudadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getProveedorDireccionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaProveedorBapiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetConsValUsrFirstLogonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GrabaUsuarioAdministradorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GrabaActivacionNuevoUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRecuperaClaveValidarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiarClaveRecuperaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiarClaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DesbloquearClaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GrabaUsuarioAdicionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsRolesPorOrgFSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetConsTodasZonasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsPermisoUserTransOpcionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DatosBaseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsRolesPorUsuarioFSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsRolesPorListaUsuariosFSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginSesionUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCatalogosFSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarDatosStockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaBandejaUsuariosAdministradoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDatosLegacyAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizaDatosLegacyAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaBandejaUsuariosAdicionalesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDatosUsuarioAdministradorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaActivarUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDatosUsuarioAdicionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsSemillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SubirArchivoActaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArchivoActaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MantenimientoUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LeePdfContratoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EscribePdfContratoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EscribePdfAdjuntoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LeePdfAdjuntoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.clibSeguridad.My.MySettings.Default.clibSeguridad_ProcesoWs_ServBaseProceso
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event envioCorreoLiciCompleted As envioCorreoLiciCompletedEventHandler
        
        '''<remarks/>
        Public Event getHorarioCitasCompleted As getHorarioCitasCompletedEventHandler
        
        '''<remarks/>
        Public Event setSolpedidoCrossCompleted As setSolpedidoCrossCompletedEventHandler
        
        '''<remarks/>
        Public Event setSolcitudCitaCERCompleted As setSolcitudCitaCERCompletedEventHandler
        
        '''<remarks/>
        Public Event getConsultaEANCompleted As getConsultaEANCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaArtBapiCompleted As ConsultaArtBapiCompletedEventHandler
        
        '''<remarks/>
        Public Event copiaXMLRINECompleted As copiaXMLRINECompletedEventHandler
        
        '''<remarks/>
        Public Event copiaTXTRINECompleted As copiaTXTRINECompletedEventHandler
        
        '''<remarks/>
        Public Event ConsInformacionSeguraUsuarioFSCompleted As ConsInformacionSeguraUsuarioFSCompletedEventHandler
        
        '''<remarks/>
        Public Event getActualizaContactoListBDCompleted As getActualizaContactoListBDCompletedEventHandler
        
        '''<remarks/>
        Public Event getActualizaContactoListCompleted As getActualizaContactoListCompletedEventHandler
        
        '''<remarks/>
        Public Event getProveedorContactoListCompleted As getProveedorContactoListCompletedEventHandler
        
        '''<remarks/>
        Public Event getProveedorContactoListCiudadCompleted As getProveedorContactoListCiudadCompletedEventHandler
        
        '''<remarks/>
        Public Event getProveedorDireccionListCompleted As getProveedorDireccionListCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaProveedorBapiCompleted As ConsultaProveedorBapiCompletedEventHandler
        
        '''<remarks/>
        Public Event GetConsValUsrFirstLogonCompleted As GetConsValUsrFirstLogonCompletedEventHandler
        
        '''<remarks/>
        Public Event GrabaUsuarioAdministradorCompleted As GrabaUsuarioAdministradorCompletedEventHandler
        
        '''<remarks/>
        Public Event GrabaActivacionNuevoUsuarioCompleted As GrabaActivacionNuevoUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRecuperaClaveValidarCompleted As GetRecuperaClaveValidarCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiarClaveRecuperaCompleted As CambiarClaveRecuperaCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiarClaveCompleted As CambiarClaveCompletedEventHandler
        
        '''<remarks/>
        Public Event DesbloquearClaveCompleted As DesbloquearClaveCompletedEventHandler
        
        '''<remarks/>
        Public Event GrabaUsuarioAdicionalCompleted As GrabaUsuarioAdicionalCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsRolesPorOrgFSCompleted As ConsRolesPorOrgFSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetConsTodasZonasCompleted As GetConsTodasZonasCompletedEventHandler
        
        '''<remarks/>
        Public Event IsPermisoUserTransOpcionCompleted As IsPermisoUserTransOpcionCompletedEventHandler
        
        '''<remarks/>
        Public Event DatosBaseCompleted As DatosBaseCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsRolesPorUsuarioFSCompleted As ConsRolesPorUsuarioFSCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsRolesPorListaUsuariosFSCompleted As ConsRolesPorListaUsuariosFSCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginSesionUsuarioCompleted As LoginSesionUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCatalogosFSCompleted As GetCatalogosFSCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarDatosStockCompleted As BuscarDatosStockCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaBandejaUsuariosAdministradoresCompleted As ConsultaBandejaUsuariosAdministradoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDatosLegacyAsociadosCompleted As ConsultaDatosLegacyAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizaDatosLegacyAsociadosCompleted As ActualizaDatosLegacyAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaBandejaUsuariosAdicionalesCompleted As ConsultaBandejaUsuariosAdicionalesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDatosUsuarioAdministradorCompleted As ConsultaDatosUsuarioAdministradorCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaActivarUsuarioCompleted As ConsultaActivarUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDatosUsuarioAdicionalCompleted As ConsultaDatosUsuarioAdicionalCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsSemillaCompleted As ConsSemillaCompletedEventHandler
        
        '''<remarks/>
        Public Event SubirArchivoActaCompleted As SubirArchivoActaCompletedEventHandler
        
        '''<remarks/>
        Public Event ArchivoActaCompleted As ArchivoActaCompletedEventHandler
        
        '''<remarks/>
        Public Event MantenimientoUserCompleted As MantenimientoUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LeePdfContratoCompleted As LeePdfContratoCompletedEventHandler
        
        '''<remarks/>
        Public Event EscribePdfContratoCompleted As EscribePdfContratoCompletedEventHandler
        
        '''<remarks/>
        Public Event EscribePdfAdjuntoCompleted As EscribePdfAdjuntoCompletedEventHandler
        
        '''<remarks/>
        Public Event LeePdfAdjuntoCompleted As LeePdfAdjuntoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/envioCorreoLici", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function envioCorreoLici(ByVal titulo As String, ByVal proveedor As String, ByVal mensaje As String, ByVal correo As String) As String
            Dim results() As Object = Me.Invoke("envioCorreoLici", New Object() {titulo, proveedor, mensaje, correo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub envioCorreoLiciAsync(ByVal titulo As String, ByVal proveedor As String, ByVal mensaje As String, ByVal correo As String)
            Me.envioCorreoLiciAsync(titulo, proveedor, mensaje, correo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub envioCorreoLiciAsync(ByVal titulo As String, ByVal proveedor As String, ByVal mensaje As String, ByVal correo As String, ByVal userState As Object)
            If (Me.envioCorreoLiciOperationCompleted Is Nothing) Then
                Me.envioCorreoLiciOperationCompleted = AddressOf Me.OnenvioCorreoLiciOperationCompleted
            End If
            Me.InvokeAsync("envioCorreoLici", New Object() {titulo, proveedor, mensaje, correo}, Me.envioCorreoLiciOperationCompleted, userState)
        End Sub
        
        Private Sub OnenvioCorreoLiciOperationCompleted(ByVal arg As Object)
            If (Not (Me.envioCorreoLiciCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent envioCorreoLiciCompleted(Me, New envioCorreoLiciCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getHorarioCitas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getHorarioCitas(ByVal bodega As String, ByVal CodProveedor As String, ByVal fecha As String) As String
            Dim results() As Object = Me.Invoke("getHorarioCitas", New Object() {bodega, CodProveedor, fecha})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getHorarioCitasAsync(ByVal bodega As String, ByVal CodProveedor As String, ByVal fecha As String)
            Me.getHorarioCitasAsync(bodega, CodProveedor, fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getHorarioCitasAsync(ByVal bodega As String, ByVal CodProveedor As String, ByVal fecha As String, ByVal userState As Object)
            If (Me.getHorarioCitasOperationCompleted Is Nothing) Then
                Me.getHorarioCitasOperationCompleted = AddressOf Me.OngetHorarioCitasOperationCompleted
            End If
            Me.InvokeAsync("getHorarioCitas", New Object() {bodega, CodProveedor, fecha}, Me.getHorarioCitasOperationCompleted, userState)
        End Sub
        
        Private Sub OngetHorarioCitasOperationCompleted(ByVal arg As Object)
            If (Not (Me.getHorarioCitasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getHorarioCitasCompleted(Me, New getHorarioCitasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setSolpedidoCross", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function setSolpedidoCross(ByVal lst_mod_Tra_pedidoCross As System.Xml.XmlNode, ByVal cantidad As Integer) As Boolean
            Dim results() As Object = Me.Invoke("setSolpedidoCross", New Object() {lst_mod_Tra_pedidoCross, cantidad})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub setSolpedidoCrossAsync(ByVal lst_mod_Tra_pedidoCross As System.Xml.XmlNode, ByVal cantidad As Integer)
            Me.setSolpedidoCrossAsync(lst_mod_Tra_pedidoCross, cantidad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setSolpedidoCrossAsync(ByVal lst_mod_Tra_pedidoCross As System.Xml.XmlNode, ByVal cantidad As Integer, ByVal userState As Object)
            If (Me.setSolpedidoCrossOperationCompleted Is Nothing) Then
                Me.setSolpedidoCrossOperationCompleted = AddressOf Me.OnsetSolpedidoCrossOperationCompleted
            End If
            Me.InvokeAsync("setSolpedidoCross", New Object() {lst_mod_Tra_pedidoCross, cantidad}, Me.setSolpedidoCrossOperationCompleted, userState)
        End Sub
        
        Private Sub OnsetSolpedidoCrossOperationCompleted(ByVal arg As Object)
            If (Not (Me.setSolpedidoCrossCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent setSolpedidoCrossCompleted(Me, New setSolpedidoCrossCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setSolcitudCitaCER", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function setSolcitudCitaCER(ByVal lst_mod_Tra_SolicitudCita As System.Xml.XmlNode, ByVal cantidad As Integer, ByVal cantidad1 As Integer) As FormResponse
            Dim results() As Object = Me.Invoke("setSolcitudCitaCER", New Object() {lst_mod_Tra_SolicitudCita, cantidad, cantidad1})
            Return CType(results(0),FormResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub setSolcitudCitaCERAsync(ByVal lst_mod_Tra_SolicitudCita As System.Xml.XmlNode, ByVal cantidad As Integer, ByVal cantidad1 As Integer)
            Me.setSolcitudCitaCERAsync(lst_mod_Tra_SolicitudCita, cantidad, cantidad1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub setSolcitudCitaCERAsync(ByVal lst_mod_Tra_SolicitudCita As System.Xml.XmlNode, ByVal cantidad As Integer, ByVal cantidad1 As Integer, ByVal userState As Object)
            If (Me.setSolcitudCitaCEROperationCompleted Is Nothing) Then
                Me.setSolcitudCitaCEROperationCompleted = AddressOf Me.OnsetSolcitudCitaCEROperationCompleted
            End If
            Me.InvokeAsync("setSolcitudCitaCER", New Object() {lst_mod_Tra_SolicitudCita, cantidad, cantidad1}, Me.setSolcitudCitaCEROperationCompleted, userState)
        End Sub
        
        Private Sub OnsetSolcitudCitaCEROperationCompleted(ByVal arg As Object)
            If (Not (Me.setSolcitudCitaCERCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent setSolcitudCitaCERCompleted(Me, New setSolcitudCitaCERCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getConsultaEAN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getConsultaEAN(ByVal codEANart As String, ByVal tipoEANart As String) As Boolean
            Dim results() As Object = Me.Invoke("getConsultaEAN", New Object() {codEANart, tipoEANart})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getConsultaEANAsync(ByVal codEANart As String, ByVal tipoEANart As String)
            Me.getConsultaEANAsync(codEANart, tipoEANart, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getConsultaEANAsync(ByVal codEANart As String, ByVal tipoEANart As String, ByVal userState As Object)
            If (Me.getConsultaEANOperationCompleted Is Nothing) Then
                Me.getConsultaEANOperationCompleted = AddressOf Me.OngetConsultaEANOperationCompleted
            End If
            Me.InvokeAsync("getConsultaEAN", New Object() {codEANart, tipoEANart}, Me.getConsultaEANOperationCompleted, userState)
        End Sub
        
        Private Sub OngetConsultaEANOperationCompleted(ByVal arg As Object)
            If (Not (Me.getConsultaEANCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getConsultaEANCompleted(Me, New getConsultaEANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaArtBapi", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaArtBapi(ByVal tipo As String, ByVal codigo As String, ByVal chkCodRef As String, ByVal CodRef As String, ByVal chkCodSap As String, ByVal CodSap As String, ByVal chkGrupoArt As String, ByVal GrupoArt As String, ByVal chkLinea As String, ByVal LineaNegocio As String, ByVal CodProveedorCons As String) As String()
            Dim results() As Object = Me.Invoke("ConsultaArtBapi", New Object() {tipo, codigo, chkCodRef, CodRef, chkCodSap, CodSap, chkGrupoArt, GrupoArt, chkLinea, LineaNegocio, CodProveedorCons})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaArtBapiAsync(ByVal tipo As String, ByVal codigo As String, ByVal chkCodRef As String, ByVal CodRef As String, ByVal chkCodSap As String, ByVal CodSap As String, ByVal chkGrupoArt As String, ByVal GrupoArt As String, ByVal chkLinea As String, ByVal LineaNegocio As String, ByVal CodProveedorCons As String)
            Me.ConsultaArtBapiAsync(tipo, codigo, chkCodRef, CodRef, chkCodSap, CodSap, chkGrupoArt, GrupoArt, chkLinea, LineaNegocio, CodProveedorCons, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaArtBapiAsync(ByVal tipo As String, ByVal codigo As String, ByVal chkCodRef As String, ByVal CodRef As String, ByVal chkCodSap As String, ByVal CodSap As String, ByVal chkGrupoArt As String, ByVal GrupoArt As String, ByVal chkLinea As String, ByVal LineaNegocio As String, ByVal CodProveedorCons As String, ByVal userState As Object)
            If (Me.ConsultaArtBapiOperationCompleted Is Nothing) Then
                Me.ConsultaArtBapiOperationCompleted = AddressOf Me.OnConsultaArtBapiOperationCompleted
            End If
            Me.InvokeAsync("ConsultaArtBapi", New Object() {tipo, codigo, chkCodRef, CodRef, chkCodSap, CodSap, chkGrupoArt, GrupoArt, chkLinea, LineaNegocio, CodProveedorCons}, Me.ConsultaArtBapiOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaArtBapiOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaArtBapiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaArtBapiCompleted(Me, New ConsultaArtBapiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/copiaXMLRINE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function copiaXMLRINE(ByVal nombreArchivo As String, ByVal contenido As String) As String
            Dim results() As Object = Me.Invoke("copiaXMLRINE", New Object() {nombreArchivo, contenido})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub copiaXMLRINEAsync(ByVal nombreArchivo As String, ByVal contenido As String)
            Me.copiaXMLRINEAsync(nombreArchivo, contenido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub copiaXMLRINEAsync(ByVal nombreArchivo As String, ByVal contenido As String, ByVal userState As Object)
            If (Me.copiaXMLRINEOperationCompleted Is Nothing) Then
                Me.copiaXMLRINEOperationCompleted = AddressOf Me.OncopiaXMLRINEOperationCompleted
            End If
            Me.InvokeAsync("copiaXMLRINE", New Object() {nombreArchivo, contenido}, Me.copiaXMLRINEOperationCompleted, userState)
        End Sub
        
        Private Sub OncopiaXMLRINEOperationCompleted(ByVal arg As Object)
            If (Not (Me.copiaXMLRINECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent copiaXMLRINECompleted(Me, New copiaXMLRINECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/copiaTXTRINE", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function copiaTXTRINE(ByVal nombreArchivo As String, ByVal contenido As String) As String
            Dim results() As Object = Me.Invoke("copiaTXTRINE", New Object() {nombreArchivo, contenido})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub copiaTXTRINEAsync(ByVal nombreArchivo As String, ByVal contenido As String)
            Me.copiaTXTRINEAsync(nombreArchivo, contenido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub copiaTXTRINEAsync(ByVal nombreArchivo As String, ByVal contenido As String, ByVal userState As Object)
            If (Me.copiaTXTRINEOperationCompleted Is Nothing) Then
                Me.copiaTXTRINEOperationCompleted = AddressOf Me.OncopiaTXTRINEOperationCompleted
            End If
            Me.InvokeAsync("copiaTXTRINE", New Object() {nombreArchivo, contenido}, Me.copiaTXTRINEOperationCompleted, userState)
        End Sub
        
        Private Sub OncopiaTXTRINEOperationCompleted(ByVal arg As Object)
            If (Not (Me.copiaTXTRINECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent copiaTXTRINECompleted(Me, New copiaTXTRINECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsInformacionSeguraUsuarioFS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsInformacionSeguraUsuarioFS(ByVal Semilla As String, ByVal Ruc As String, ByVal PI_Session As String, ByVal pUsuario As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsInformacionSeguraUsuarioFS", New Object() {Semilla, Ruc, PI_Session, pUsuario})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsInformacionSeguraUsuarioFSAsync(ByVal Semilla As String, ByVal Ruc As String, ByVal PI_Session As String, ByVal pUsuario As String)
            Me.ConsInformacionSeguraUsuarioFSAsync(Semilla, Ruc, PI_Session, pUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsInformacionSeguraUsuarioFSAsync(ByVal Semilla As String, ByVal Ruc As String, ByVal PI_Session As String, ByVal pUsuario As String, ByVal userState As Object)
            If (Me.ConsInformacionSeguraUsuarioFSOperationCompleted Is Nothing) Then
                Me.ConsInformacionSeguraUsuarioFSOperationCompleted = AddressOf Me.OnConsInformacionSeguraUsuarioFSOperationCompleted
            End If
            Me.InvokeAsync("ConsInformacionSeguraUsuarioFS", New Object() {Semilla, Ruc, PI_Session, pUsuario}, Me.ConsInformacionSeguraUsuarioFSOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsInformacionSeguraUsuarioFSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsInformacionSeguraUsuarioFSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsInformacionSeguraUsuarioFSCompleted(Me, New ConsInformacionSeguraUsuarioFSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getActualizaContactoListBD", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getActualizaContactoListBD(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal listaContacto As System.Xml.XmlNode, ByVal listaUsrAlmacen As System.Xml.XmlNode, ByVal tipo As Integer, ByVal codSap As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("getActualizaContactoListBD", New Object() {Semilla, ValorTokenUser, IdOrganizacion, listaContacto, listaUsrAlmacen, tipo, codSap})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getActualizaContactoListBDAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal listaContacto As System.Xml.XmlNode, ByVal listaUsrAlmacen As System.Xml.XmlNode, ByVal tipo As Integer, ByVal codSap As String)
            Me.getActualizaContactoListBDAsync(Semilla, ValorTokenUser, IdOrganizacion, listaContacto, listaUsrAlmacen, tipo, codSap, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getActualizaContactoListBDAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal listaContacto As System.Xml.XmlNode, ByVal listaUsrAlmacen As System.Xml.XmlNode, ByVal tipo As Integer, ByVal codSap As String, ByVal userState As Object)
            If (Me.getActualizaContactoListBDOperationCompleted Is Nothing) Then
                Me.getActualizaContactoListBDOperationCompleted = AddressOf Me.OngetActualizaContactoListBDOperationCompleted
            End If
            Me.InvokeAsync("getActualizaContactoListBD", New Object() {Semilla, ValorTokenUser, IdOrganizacion, listaContacto, listaUsrAlmacen, tipo, codSap}, Me.getActualizaContactoListBDOperationCompleted, userState)
        End Sub
        
        Private Sub OngetActualizaContactoListBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.getActualizaContactoListBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getActualizaContactoListBDCompleted(Me, New getActualizaContactoListBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getActualizaContactoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getActualizaContactoList(ByVal listaContacto As System.Xml.XmlNode, ByVal listaUsrAlmacen As System.Xml.XmlNode, ByVal codSap As String) As String
            Dim results() As Object = Me.Invoke("getActualizaContactoList", New Object() {listaContacto, listaUsrAlmacen, codSap})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getActualizaContactoListAsync(ByVal listaContacto As System.Xml.XmlNode, ByVal listaUsrAlmacen As System.Xml.XmlNode, ByVal codSap As String)
            Me.getActualizaContactoListAsync(listaContacto, listaUsrAlmacen, codSap, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getActualizaContactoListAsync(ByVal listaContacto As System.Xml.XmlNode, ByVal listaUsrAlmacen As System.Xml.XmlNode, ByVal codSap As String, ByVal userState As Object)
            If (Me.getActualizaContactoListOperationCompleted Is Nothing) Then
                Me.getActualizaContactoListOperationCompleted = AddressOf Me.OngetActualizaContactoListOperationCompleted
            End If
            Me.InvokeAsync("getActualizaContactoList", New Object() {listaContacto, listaUsrAlmacen, codSap}, Me.getActualizaContactoListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetActualizaContactoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getActualizaContactoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getActualizaContactoListCompleted(Me, New getActualizaContactoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProveedorContactoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getProveedorContactoList(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal idproveedorconta As String) As SolProvContacto()
            Dim results() As Object = Me.Invoke("getProveedorContactoList", New Object() {Semilla, ValorTokenUser, IdOrganizacion, idproveedorconta})
            Return CType(results(0),SolProvContacto())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProveedorContactoListAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal idproveedorconta As String)
            Me.getProveedorContactoListAsync(Semilla, ValorTokenUser, IdOrganizacion, idproveedorconta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProveedorContactoListAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal idproveedorconta As String, ByVal userState As Object)
            If (Me.getProveedorContactoListOperationCompleted Is Nothing) Then
                Me.getProveedorContactoListOperationCompleted = AddressOf Me.OngetProveedorContactoListOperationCompleted
            End If
            Me.InvokeAsync("getProveedorContactoList", New Object() {Semilla, ValorTokenUser, IdOrganizacion, idproveedorconta}, Me.getProveedorContactoListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProveedorContactoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProveedorContactoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProveedorContactoListCompleted(Me, New getProveedorContactoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProveedorContactoListCiudad", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getProveedorContactoListCiudad(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal idproveedorconta As String) As SolProvContactoCiudad()
            Dim results() As Object = Me.Invoke("getProveedorContactoListCiudad", New Object() {Semilla, ValorTokenUser, IdOrganizacion, idproveedorconta})
            Return CType(results(0),SolProvContactoCiudad())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProveedorContactoListCiudadAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal idproveedorconta As String)
            Me.getProveedorContactoListCiudadAsync(Semilla, ValorTokenUser, IdOrganizacion, idproveedorconta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProveedorContactoListCiudadAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal idproveedorconta As String, ByVal userState As Object)
            If (Me.getProveedorContactoListCiudadOperationCompleted Is Nothing) Then
                Me.getProveedorContactoListCiudadOperationCompleted = AddressOf Me.OngetProveedorContactoListCiudadOperationCompleted
            End If
            Me.InvokeAsync("getProveedorContactoListCiudad", New Object() {Semilla, ValorTokenUser, IdOrganizacion, idproveedorconta}, Me.getProveedorContactoListCiudadOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProveedorContactoListCiudadOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProveedorContactoListCiudadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProveedorContactoListCiudadCompleted(Me, New getProveedorContactoListCiudadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getProveedorDireccionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getProveedorDireccionList(ByVal idproveedordir As String) As SolProvDireccion()
            Dim results() As Object = Me.Invoke("getProveedorDireccionList", New Object() {idproveedordir})
            Return CType(results(0),SolProvDireccion())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getProveedorDireccionListAsync(ByVal idproveedordir As String)
            Me.getProveedorDireccionListAsync(idproveedordir, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getProveedorDireccionListAsync(ByVal idproveedordir As String, ByVal userState As Object)
            If (Me.getProveedorDireccionListOperationCompleted Is Nothing) Then
                Me.getProveedorDireccionListOperationCompleted = AddressOf Me.OngetProveedorDireccionListOperationCompleted
            End If
            Me.InvokeAsync("getProveedorDireccionList", New Object() {idproveedordir}, Me.getProveedorDireccionListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetProveedorDireccionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getProveedorDireccionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getProveedorDireccionListCompleted(Me, New getProveedorDireccionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaProveedorBapi", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaProveedorBapi(ByVal idproveedor As String) As SolProveedor()
            Dim results() As Object = Me.Invoke("ConsultaProveedorBapi", New Object() {idproveedor})
            Return CType(results(0),SolProveedor())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaProveedorBapiAsync(ByVal idproveedor As String)
            Me.ConsultaProveedorBapiAsync(idproveedor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaProveedorBapiAsync(ByVal idproveedor As String, ByVal userState As Object)
            If (Me.ConsultaProveedorBapiOperationCompleted Is Nothing) Then
                Me.ConsultaProveedorBapiOperationCompleted = AddressOf Me.OnConsultaProveedorBapiOperationCompleted
            End If
            Me.InvokeAsync("ConsultaProveedorBapi", New Object() {idproveedor}, Me.ConsultaProveedorBapiOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaProveedorBapiOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaProveedorBapiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaProveedorBapiCompleted(Me, New ConsultaProveedorBapiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsValUsrFirstLogon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConsValUsrFirstLogon(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal ValorTokenUser As String, ByVal xmlParam As System.Xml.XmlNode) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetConsValUsrFirstLogon", New Object() {Semilla, IdOrganizacion, ValorTokenUser, xmlParam})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetConsValUsrFirstLogonAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal ValorTokenUser As String, ByVal xmlParam As System.Xml.XmlNode)
            Me.GetConsValUsrFirstLogonAsync(Semilla, IdOrganizacion, ValorTokenUser, xmlParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetConsValUsrFirstLogonAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal ValorTokenUser As String, ByVal xmlParam As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.GetConsValUsrFirstLogonOperationCompleted Is Nothing) Then
                Me.GetConsValUsrFirstLogonOperationCompleted = AddressOf Me.OnGetConsValUsrFirstLogonOperationCompleted
            End If
            Me.InvokeAsync("GetConsValUsrFirstLogon", New Object() {Semilla, IdOrganizacion, ValorTokenUser, xmlParam}, Me.GetConsValUsrFirstLogonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetConsValUsrFirstLogonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetConsValUsrFirstLogonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetConsValUsrFirstLogonCompleted(Me, New GetConsValUsrFirstLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GrabaUsuarioAdministrador", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GrabaUsuarioAdministrador(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal xmlParam As System.Xml.XmlNode) As String
            Dim results() As Object = Me.Invoke("GrabaUsuarioAdministrador", New Object() {Semilla, ValorTokenUser, xmlParam})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GrabaUsuarioAdministradorAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal xmlParam As System.Xml.XmlNode)
            Me.GrabaUsuarioAdministradorAsync(Semilla, ValorTokenUser, xmlParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GrabaUsuarioAdministradorAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal xmlParam As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.GrabaUsuarioAdministradorOperationCompleted Is Nothing) Then
                Me.GrabaUsuarioAdministradorOperationCompleted = AddressOf Me.OnGrabaUsuarioAdministradorOperationCompleted
            End If
            Me.InvokeAsync("GrabaUsuarioAdministrador", New Object() {Semilla, ValorTokenUser, xmlParam}, Me.GrabaUsuarioAdministradorOperationCompleted, userState)
        End Sub
        
        Private Sub OnGrabaUsuarioAdministradorOperationCompleted(ByVal arg As Object)
            If (Not (Me.GrabaUsuarioAdministradorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GrabaUsuarioAdministradorCompleted(Me, New GrabaUsuarioAdministradorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GrabaActivacionNuevoUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GrabaActivacionNuevoUsuario(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal xmlParam As System.Xml.XmlNode) As String
            Dim results() As Object = Me.Invoke("GrabaActivacionNuevoUsuario", New Object() {Semilla, ValorTokenUser, xmlParam})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GrabaActivacionNuevoUsuarioAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal xmlParam As System.Xml.XmlNode)
            Me.GrabaActivacionNuevoUsuarioAsync(Semilla, ValorTokenUser, xmlParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GrabaActivacionNuevoUsuarioAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal xmlParam As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.GrabaActivacionNuevoUsuarioOperationCompleted Is Nothing) Then
                Me.GrabaActivacionNuevoUsuarioOperationCompleted = AddressOf Me.OnGrabaActivacionNuevoUsuarioOperationCompleted
            End If
            Me.InvokeAsync("GrabaActivacionNuevoUsuario", New Object() {Semilla, ValorTokenUser, xmlParam}, Me.GrabaActivacionNuevoUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnGrabaActivacionNuevoUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.GrabaActivacionNuevoUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GrabaActivacionNuevoUsuarioCompleted(Me, New GrabaActivacionNuevoUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecuperaClaveValidar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRecuperaClaveValidar(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal PI_Session As String, ByVal xmlParam As System.Xml.XmlNode) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRecuperaClaveValidar", New Object() {Semilla, IdOrganizacion, PI_Session, xmlParam})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecuperaClaveValidarAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal PI_Session As String, ByVal xmlParam As System.Xml.XmlNode)
            Me.GetRecuperaClaveValidarAsync(Semilla, IdOrganizacion, PI_Session, xmlParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecuperaClaveValidarAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal PI_Session As String, ByVal xmlParam As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.GetRecuperaClaveValidarOperationCompleted Is Nothing) Then
                Me.GetRecuperaClaveValidarOperationCompleted = AddressOf Me.OnGetRecuperaClaveValidarOperationCompleted
            End If
            Me.InvokeAsync("GetRecuperaClaveValidar", New Object() {Semilla, IdOrganizacion, PI_Session, xmlParam}, Me.GetRecuperaClaveValidarOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecuperaClaveValidarOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecuperaClaveValidarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecuperaClaveValidarCompleted(Me, New GetRecuperaClaveValidarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CambiarClaveRecupera", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiarClaveRecupera(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal Clave As String, ByVal Ruc As String) As String
            Dim results() As Object = Me.Invoke("CambiarClaveRecupera", New Object() {Semilla, ValorTokenUser, Usuario, Clave, Ruc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiarClaveRecuperaAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal Clave As String, ByVal Ruc As String)
            Me.CambiarClaveRecuperaAsync(Semilla, ValorTokenUser, Usuario, Clave, Ruc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiarClaveRecuperaAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal Clave As String, ByVal Ruc As String, ByVal userState As Object)
            If (Me.CambiarClaveRecuperaOperationCompleted Is Nothing) Then
                Me.CambiarClaveRecuperaOperationCompleted = AddressOf Me.OnCambiarClaveRecuperaOperationCompleted
            End If
            Me.InvokeAsync("CambiarClaveRecupera", New Object() {Semilla, ValorTokenUser, Usuario, Clave, Ruc}, Me.CambiarClaveRecuperaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiarClaveRecuperaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiarClaveRecuperaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiarClaveRecuperaCompleted(Me, New CambiarClaveRecuperaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CambiarClave", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiarClave(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal ClaveAct As String, ByVal ClaveNew As String, ByVal Ruc As String) As String
            Dim results() As Object = Me.Invoke("CambiarClave", New Object() {Semilla, ValorTokenUser, Usuario, ClaveAct, ClaveNew, Ruc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiarClaveAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal ClaveAct As String, ByVal ClaveNew As String, ByVal Ruc As String)
            Me.CambiarClaveAsync(Semilla, ValorTokenUser, Usuario, ClaveAct, ClaveNew, Ruc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiarClaveAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal ClaveAct As String, ByVal ClaveNew As String, ByVal Ruc As String, ByVal userState As Object)
            If (Me.CambiarClaveOperationCompleted Is Nothing) Then
                Me.CambiarClaveOperationCompleted = AddressOf Me.OnCambiarClaveOperationCompleted
            End If
            Me.InvokeAsync("CambiarClave", New Object() {Semilla, ValorTokenUser, Usuario, ClaveAct, ClaveNew, Ruc}, Me.CambiarClaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiarClaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiarClaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiarClaveCompleted(Me, New CambiarClaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DesbloquearClave", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DesbloquearClave(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal bandera As Boolean, ByVal Clave As String, ByVal Ruc As String) As String
            Dim results() As Object = Me.Invoke("DesbloquearClave", New Object() {Semilla, ValorTokenUser, Usuario, bandera, Clave, Ruc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DesbloquearClaveAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal bandera As Boolean, ByVal Clave As String, ByVal Ruc As String)
            Me.DesbloquearClaveAsync(Semilla, ValorTokenUser, Usuario, bandera, Clave, Ruc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DesbloquearClaveAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal bandera As Boolean, ByVal Clave As String, ByVal Ruc As String, ByVal userState As Object)
            If (Me.DesbloquearClaveOperationCompleted Is Nothing) Then
                Me.DesbloquearClaveOperationCompleted = AddressOf Me.OnDesbloquearClaveOperationCompleted
            End If
            Me.InvokeAsync("DesbloquearClave", New Object() {Semilla, ValorTokenUser, Usuario, bandera, Clave, Ruc}, Me.DesbloquearClaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnDesbloquearClaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.DesbloquearClaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DesbloquearClaveCompleted(Me, New DesbloquearClaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GrabaUsuarioAdicional", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GrabaUsuarioAdicional(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal xmlParam As String) As String
            Dim results() As Object = Me.Invoke("GrabaUsuarioAdicional", New Object() {Semilla, ValorTokenUser, xmlParam})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GrabaUsuarioAdicionalAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal xmlParam As String)
            Me.GrabaUsuarioAdicionalAsync(Semilla, ValorTokenUser, xmlParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GrabaUsuarioAdicionalAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal xmlParam As String, ByVal userState As Object)
            If (Me.GrabaUsuarioAdicionalOperationCompleted Is Nothing) Then
                Me.GrabaUsuarioAdicionalOperationCompleted = AddressOf Me.OnGrabaUsuarioAdicionalOperationCompleted
            End If
            Me.InvokeAsync("GrabaUsuarioAdicional", New Object() {Semilla, ValorTokenUser, xmlParam}, Me.GrabaUsuarioAdicionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnGrabaUsuarioAdicionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.GrabaUsuarioAdicionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GrabaUsuarioAdicionalCompleted(Me, New GrabaUsuarioAdicionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsRolesPorOrgFS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsRolesPorOrgFS(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsRolesPorOrgFS", New Object() {Semilla, ValorTokenUser, IdOrganizacion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsRolesPorOrgFSAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer)
            Me.ConsRolesPorOrgFSAsync(Semilla, ValorTokenUser, IdOrganizacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsRolesPorOrgFSAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal IdOrganizacion As Integer, ByVal userState As Object)
            If (Me.ConsRolesPorOrgFSOperationCompleted Is Nothing) Then
                Me.ConsRolesPorOrgFSOperationCompleted = AddressOf Me.OnConsRolesPorOrgFSOperationCompleted
            End If
            Me.InvokeAsync("ConsRolesPorOrgFS", New Object() {Semilla, ValorTokenUser, IdOrganizacion}, Me.ConsRolesPorOrgFSOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsRolesPorOrgFSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsRolesPorOrgFSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsRolesPorOrgFSCompleted(Me, New ConsRolesPorOrgFSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsTodasZonas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConsTodasZonas(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal ValorTokenUser As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetConsTodasZonas", New Object() {Semilla, IdOrganizacion, ValorTokenUser})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetConsTodasZonasAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal ValorTokenUser As String)
            Me.GetConsTodasZonasAsync(Semilla, IdOrganizacion, ValorTokenUser, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetConsTodasZonasAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal ValorTokenUser As String, ByVal userState As Object)
            If (Me.GetConsTodasZonasOperationCompleted Is Nothing) Then
                Me.GetConsTodasZonasOperationCompleted = AddressOf Me.OnGetConsTodasZonasOperationCompleted
            End If
            Me.InvokeAsync("GetConsTodasZonas", New Object() {Semilla, IdOrganizacion, ValorTokenUser}, Me.GetConsTodasZonasOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetConsTodasZonasOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetConsTodasZonasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetConsTodasZonasCompleted(Me, New GetConsTodasZonasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsPermisoUserTransOpcion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsPermisoUserTransOpcion(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal IdTransaccion As Integer, ByVal IdOpcion As Integer, ByVal PI_ParamObjList As String, ByVal ValorTokenUser As String) As Boolean
            Dim results() As Object = Me.Invoke("IsPermisoUserTransOpcion", New Object() {Semilla, IdOrganizacion, IdTransaccion, IdOpcion, PI_ParamObjList, ValorTokenUser})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsPermisoUserTransOpcionAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal IdTransaccion As Integer, ByVal IdOpcion As Integer, ByVal PI_ParamObjList As String, ByVal ValorTokenUser As String)
            Me.IsPermisoUserTransOpcionAsync(Semilla, IdOrganizacion, IdTransaccion, IdOpcion, PI_ParamObjList, ValorTokenUser, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsPermisoUserTransOpcionAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal IdTransaccion As Integer, ByVal IdOpcion As Integer, ByVal PI_ParamObjList As String, ByVal ValorTokenUser As String, ByVal userState As Object)
            If (Me.IsPermisoUserTransOpcionOperationCompleted Is Nothing) Then
                Me.IsPermisoUserTransOpcionOperationCompleted = AddressOf Me.OnIsPermisoUserTransOpcionOperationCompleted
            End If
            Me.InvokeAsync("IsPermisoUserTransOpcion", New Object() {Semilla, IdOrganizacion, IdTransaccion, IdOpcion, PI_ParamObjList, ValorTokenUser}, Me.IsPermisoUserTransOpcionOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsPermisoUserTransOpcionOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsPermisoUserTransOpcionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsPermisoUserTransOpcionCompleted(Me, New IsPermisoUserTransOpcionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DatosBase", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DatosBase(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal IdTransaccion As Integer, ByVal IdOpcion As Integer, ByVal PI_ParamObjList() As Object, ByVal ValorTokenUser As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("DatosBase", New Object() {Semilla, IdOrganizacion, IdTransaccion, IdOpcion, PI_ParamObjList, ValorTokenUser})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DatosBaseAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal IdTransaccion As Integer, ByVal IdOpcion As Integer, ByVal PI_ParamObjList() As Object, ByVal ValorTokenUser As String)
            Me.DatosBaseAsync(Semilla, IdOrganizacion, IdTransaccion, IdOpcion, PI_ParamObjList, ValorTokenUser, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DatosBaseAsync(ByVal Semilla As String, ByVal IdOrganizacion As Integer, ByVal IdTransaccion As Integer, ByVal IdOpcion As Integer, ByVal PI_ParamObjList() As Object, ByVal ValorTokenUser As String, ByVal userState As Object)
            If (Me.DatosBaseOperationCompleted Is Nothing) Then
                Me.DatosBaseOperationCompleted = AddressOf Me.OnDatosBaseOperationCompleted
            End If
            Me.InvokeAsync("DatosBase", New Object() {Semilla, IdOrganizacion, IdTransaccion, IdOpcion, PI_ParamObjList, ValorTokenUser}, Me.DatosBaseOperationCompleted, userState)
        End Sub
        
        Private Sub OnDatosBaseOperationCompleted(ByVal arg As Object)
            If (Not (Me.DatosBaseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DatosBaseCompleted(Me, New DatosBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsRolesPorUsuarioFS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsRolesPorUsuarioFS(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal Ruc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsRolesPorUsuarioFS", New Object() {Semilla, ValorTokenUser, Usuario, Ruc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsRolesPorUsuarioFSAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal Ruc As String)
            Me.ConsRolesPorUsuarioFSAsync(Semilla, ValorTokenUser, Usuario, Ruc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsRolesPorUsuarioFSAsync(ByVal Semilla As String, ByVal ValorTokenUser As String, ByVal Usuario As String, ByVal Ruc As String, ByVal userState As Object)
            If (Me.ConsRolesPorUsuarioFSOperationCompleted Is Nothing) Then
                Me.ConsRolesPorUsuarioFSOperationCompleted = AddressOf Me.OnConsRolesPorUsuarioFSOperationCompleted
            End If
            Me.InvokeAsync("ConsRolesPorUsuarioFS", New Object() {Semilla, ValorTokenUser, Usuario, Ruc}, Me.ConsRolesPorUsuarioFSOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsRolesPorUsuarioFSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsRolesPorUsuarioFSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsRolesPorUsuarioFSCompleted(Me, New ConsRolesPorUsuarioFSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsRolesPorListaUsuariosFS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsRolesPorListaUsuariosFS(ByVal ValorTokenUser As String, ByVal usuarios() As String, ByVal Ruc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsRolesPorListaUsuariosFS", New Object() {ValorTokenUser, usuarios, Ruc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsRolesPorListaUsuariosFSAsync(ByVal ValorTokenUser As String, ByVal usuarios() As String, ByVal Ruc As String)
            Me.ConsRolesPorListaUsuariosFSAsync(ValorTokenUser, usuarios, Ruc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsRolesPorListaUsuariosFSAsync(ByVal ValorTokenUser As String, ByVal usuarios() As String, ByVal Ruc As String, ByVal userState As Object)
            If (Me.ConsRolesPorListaUsuariosFSOperationCompleted Is Nothing) Then
                Me.ConsRolesPorListaUsuariosFSOperationCompleted = AddressOf Me.OnConsRolesPorListaUsuariosFSOperationCompleted
            End If
            Me.InvokeAsync("ConsRolesPorListaUsuariosFS", New Object() {ValorTokenUser, usuarios, Ruc}, Me.ConsRolesPorListaUsuariosFSOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsRolesPorListaUsuariosFSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsRolesPorListaUsuariosFSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsRolesPorListaUsuariosFSCompleted(Me, New ConsRolesPorListaUsuariosFSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginSesionUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoginSesionUsuario(ByVal Semilla As String, ByVal PI_Session As String, ByVal sourceLogin As String, ByVal PI_ParamXML As String) As String
            Dim results() As Object = Me.Invoke("LoginSesionUsuario", New Object() {Semilla, PI_Session, sourceLogin, PI_ParamXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginSesionUsuarioAsync(ByVal Semilla As String, ByVal PI_Session As String, ByVal sourceLogin As String, ByVal PI_ParamXML As String)
            Me.LoginSesionUsuarioAsync(Semilla, PI_Session, sourceLogin, PI_ParamXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginSesionUsuarioAsync(ByVal Semilla As String, ByVal PI_Session As String, ByVal sourceLogin As String, ByVal PI_ParamXML As String, ByVal userState As Object)
            If (Me.LoginSesionUsuarioOperationCompleted Is Nothing) Then
                Me.LoginSesionUsuarioOperationCompleted = AddressOf Me.OnLoginSesionUsuarioOperationCompleted
            End If
            Me.InvokeAsync("LoginSesionUsuario", New Object() {Semilla, PI_Session, sourceLogin, PI_ParamXML}, Me.LoginSesionUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginSesionUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginSesionUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginSesionUsuarioCompleted(Me, New LoginSesionUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCatalogosFS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCatalogosFS(ByVal PI_Session As String, ByVal IdTblCatalogo As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCatalogosFS", New Object() {PI_Session, IdTblCatalogo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCatalogosFSAsync(ByVal PI_Session As String, ByVal IdTblCatalogo As Integer)
            Me.GetCatalogosFSAsync(PI_Session, IdTblCatalogo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCatalogosFSAsync(ByVal PI_Session As String, ByVal IdTblCatalogo As Integer, ByVal userState As Object)
            If (Me.GetCatalogosFSOperationCompleted Is Nothing) Then
                Me.GetCatalogosFSOperationCompleted = AddressOf Me.OnGetCatalogosFSOperationCompleted
            End If
            Me.InvokeAsync("GetCatalogosFS", New Object() {PI_Session, IdTblCatalogo}, Me.GetCatalogosFSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCatalogosFSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCatalogosFSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCatalogosFSCompleted(Me, New GetCatalogosFSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscarDatosStock", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarDatosStock(ByVal datos As System.Xml.XmlNode, ByVal metriales As Integer, ByVal almacen As Integer) As cls_Stock()
            Dim results() As Object = Me.Invoke("BuscarDatosStock", New Object() {datos, metriales, almacen})
            Return CType(results(0),cls_Stock())
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarDatosStockAsync(ByVal datos As System.Xml.XmlNode, ByVal metriales As Integer, ByVal almacen As Integer)
            Me.BuscarDatosStockAsync(datos, metriales, almacen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarDatosStockAsync(ByVal datos As System.Xml.XmlNode, ByVal metriales As Integer, ByVal almacen As Integer, ByVal userState As Object)
            If (Me.BuscarDatosStockOperationCompleted Is Nothing) Then
                Me.BuscarDatosStockOperationCompleted = AddressOf Me.OnBuscarDatosStockOperationCompleted
            End If
            Me.InvokeAsync("BuscarDatosStock", New Object() {datos, metriales, almacen}, Me.BuscarDatosStockOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarDatosStockOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarDatosStockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarDatosStockCompleted(Me, New BuscarDatosStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaBandejaUsuariosAdministradores", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaBandejaUsuariosAdministradores(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaBandejaUsuariosAdministradores", New Object() {PI_Semilla, PI_Session, PI_XmlDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaBandejaUsuariosAdministradoresAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode)
            Me.ConsultaBandejaUsuariosAdministradoresAsync(PI_Semilla, PI_Session, PI_XmlDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaBandejaUsuariosAdministradoresAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ConsultaBandejaUsuariosAdministradoresOperationCompleted Is Nothing) Then
                Me.ConsultaBandejaUsuariosAdministradoresOperationCompleted = AddressOf Me.OnConsultaBandejaUsuariosAdministradoresOperationCompleted
            End If
            Me.InvokeAsync("ConsultaBandejaUsuariosAdministradores", New Object() {PI_Semilla, PI_Session, PI_XmlDoc}, Me.ConsultaBandejaUsuariosAdministradoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaBandejaUsuariosAdministradoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaBandejaUsuariosAdministradoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaBandejaUsuariosAdministradoresCompleted(Me, New ConsultaBandejaUsuariosAdministradoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDatosLegacyAsociados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDatosLegacyAsociados(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaDatosLegacyAsociados", New Object() {PI_Semilla, PI_Session, PI_XmlDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDatosLegacyAsociadosAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode)
            Me.ConsultaDatosLegacyAsociadosAsync(PI_Semilla, PI_Session, PI_XmlDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDatosLegacyAsociadosAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ConsultaDatosLegacyAsociadosOperationCompleted Is Nothing) Then
                Me.ConsultaDatosLegacyAsociadosOperationCompleted = AddressOf Me.OnConsultaDatosLegacyAsociadosOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDatosLegacyAsociados", New Object() {PI_Semilla, PI_Session, PI_XmlDoc}, Me.ConsultaDatosLegacyAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDatosLegacyAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDatosLegacyAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDatosLegacyAsociadosCompleted(Me, New ConsultaDatosLegacyAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActualizaDatosLegacyAsociados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizaDatosLegacyAsociados(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ActualizaDatosLegacyAsociados", New Object() {PI_Semilla, PI_Session, PI_XmlDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizaDatosLegacyAsociadosAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode)
            Me.ActualizaDatosLegacyAsociadosAsync(PI_Semilla, PI_Session, PI_XmlDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizaDatosLegacyAsociadosAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ActualizaDatosLegacyAsociadosOperationCompleted Is Nothing) Then
                Me.ActualizaDatosLegacyAsociadosOperationCompleted = AddressOf Me.OnActualizaDatosLegacyAsociadosOperationCompleted
            End If
            Me.InvokeAsync("ActualizaDatosLegacyAsociados", New Object() {PI_Semilla, PI_Session, PI_XmlDoc}, Me.ActualizaDatosLegacyAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizaDatosLegacyAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizaDatosLegacyAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizaDatosLegacyAsociadosCompleted(Me, New ActualizaDatosLegacyAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaBandejaUsuariosAdicionales", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaBandejaUsuariosAdicionales(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaBandejaUsuariosAdicionales", New Object() {PI_Semilla, PI_Session, PI_XmlDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaBandejaUsuariosAdicionalesAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode)
            Me.ConsultaBandejaUsuariosAdicionalesAsync(PI_Semilla, PI_Session, PI_XmlDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaBandejaUsuariosAdicionalesAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ConsultaBandejaUsuariosAdicionalesOperationCompleted Is Nothing) Then
                Me.ConsultaBandejaUsuariosAdicionalesOperationCompleted = AddressOf Me.OnConsultaBandejaUsuariosAdicionalesOperationCompleted
            End If
            Me.InvokeAsync("ConsultaBandejaUsuariosAdicionales", New Object() {PI_Semilla, PI_Session, PI_XmlDoc}, Me.ConsultaBandejaUsuariosAdicionalesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaBandejaUsuariosAdicionalesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaBandejaUsuariosAdicionalesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaBandejaUsuariosAdicionalesCompleted(Me, New ConsultaBandejaUsuariosAdicionalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDatosUsuarioAdministrador", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDatosUsuarioAdministrador(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaDatosUsuarioAdministrador", New Object() {PI_Semilla, PI_Session, PI_XmlDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDatosUsuarioAdministradorAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode)
            Me.ConsultaDatosUsuarioAdministradorAsync(PI_Semilla, PI_Session, PI_XmlDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDatosUsuarioAdministradorAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ConsultaDatosUsuarioAdministradorOperationCompleted Is Nothing) Then
                Me.ConsultaDatosUsuarioAdministradorOperationCompleted = AddressOf Me.OnConsultaDatosUsuarioAdministradorOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDatosUsuarioAdministrador", New Object() {PI_Semilla, PI_Session, PI_XmlDoc}, Me.ConsultaDatosUsuarioAdministradorOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDatosUsuarioAdministradorOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDatosUsuarioAdministradorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDatosUsuarioAdministradorCompleted(Me, New ConsultaDatosUsuarioAdministradorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaActivarUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaActivarUsuario(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaActivarUsuario", New Object() {PI_Semilla, PI_Session, PI_XmlDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaActivarUsuarioAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode)
            Me.ConsultaActivarUsuarioAsync(PI_Semilla, PI_Session, PI_XmlDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaActivarUsuarioAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ConsultaActivarUsuarioOperationCompleted Is Nothing) Then
                Me.ConsultaActivarUsuarioOperationCompleted = AddressOf Me.OnConsultaActivarUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ConsultaActivarUsuario", New Object() {PI_Semilla, PI_Session, PI_XmlDoc}, Me.ConsultaActivarUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaActivarUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaActivarUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaActivarUsuarioCompleted(Me, New ConsultaActivarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDatosUsuarioAdicional", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDatosUsuarioAdicional(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaDatosUsuarioAdicional", New Object() {PI_Semilla, PI_Session, PI_XmlDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDatosUsuarioAdicionalAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode)
            Me.ConsultaDatosUsuarioAdicionalAsync(PI_Semilla, PI_Session, PI_XmlDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDatosUsuarioAdicionalAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ConsultaDatosUsuarioAdicionalOperationCompleted Is Nothing) Then
                Me.ConsultaDatosUsuarioAdicionalOperationCompleted = AddressOf Me.OnConsultaDatosUsuarioAdicionalOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDatosUsuarioAdicional", New Object() {PI_Semilla, PI_Session, PI_XmlDoc}, Me.ConsultaDatosUsuarioAdicionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDatosUsuarioAdicionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDatosUsuarioAdicionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDatosUsuarioAdicionalCompleted(Me, New ConsultaDatosUsuarioAdicionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsSemilla", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsSemilla(ByVal IdApl As String, ByVal IdUsrLocal As String, ByVal IdUsr As String, ByVal Maquina As String) As String()
            Dim results() As Object = Me.Invoke("ConsSemilla", New Object() {IdApl, IdUsrLocal, IdUsr, Maquina})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsSemillaAsync(ByVal IdApl As String, ByVal IdUsrLocal As String, ByVal IdUsr As String, ByVal Maquina As String)
            Me.ConsSemillaAsync(IdApl, IdUsrLocal, IdUsr, Maquina, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsSemillaAsync(ByVal IdApl As String, ByVal IdUsrLocal As String, ByVal IdUsr As String, ByVal Maquina As String, ByVal userState As Object)
            If (Me.ConsSemillaOperationCompleted Is Nothing) Then
                Me.ConsSemillaOperationCompleted = AddressOf Me.OnConsSemillaOperationCompleted
            End If
            Me.InvokeAsync("ConsSemilla", New Object() {IdApl, IdUsrLocal, IdUsr, Maquina}, Me.ConsSemillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsSemillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsSemillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsSemillaCompleted(Me, New ConsSemillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubirArchivoActa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SubirArchivoActa(ByVal archivo As String, ByVal anio As String, ByVal mes As String, ByVal dia As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal contenido() As Byte) As Boolean
            Dim results() As Object = Me.Invoke("SubirArchivoActa", New Object() {archivo, anio, mes, dia, contenido})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SubirArchivoActaAsync(ByVal archivo As String, ByVal anio As String, ByVal mes As String, ByVal dia As String, ByVal contenido() As Byte)
            Me.SubirArchivoActaAsync(archivo, anio, mes, dia, contenido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SubirArchivoActaAsync(ByVal archivo As String, ByVal anio As String, ByVal mes As String, ByVal dia As String, ByVal contenido() As Byte, ByVal userState As Object)
            If (Me.SubirArchivoActaOperationCompleted Is Nothing) Then
                Me.SubirArchivoActaOperationCompleted = AddressOf Me.OnSubirArchivoActaOperationCompleted
            End If
            Me.InvokeAsync("SubirArchivoActa", New Object() {archivo, anio, mes, dia, contenido}, Me.SubirArchivoActaOperationCompleted, userState)
        End Sub
        
        Private Sub OnSubirArchivoActaOperationCompleted(ByVal arg As Object)
            If (Not (Me.SubirArchivoActaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SubirArchivoActaCompleted(Me, New SubirArchivoActaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArchivoActa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArchivoActa(ByVal archivo As String, ByVal anio As String, ByVal codSap As String, ByVal codAlmacen As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("ArchivoActa", New Object() {archivo, anio, codSap, codAlmacen})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArchivoActaAsync(ByVal archivo As String, ByVal anio As String, ByVal codSap As String, ByVal codAlmacen As String)
            Me.ArchivoActaAsync(archivo, anio, codSap, codAlmacen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArchivoActaAsync(ByVal archivo As String, ByVal anio As String, ByVal codSap As String, ByVal codAlmacen As String, ByVal userState As Object)
            If (Me.ArchivoActaOperationCompleted Is Nothing) Then
                Me.ArchivoActaOperationCompleted = AddressOf Me.OnArchivoActaOperationCompleted
            End If
            Me.InvokeAsync("ArchivoActa", New Object() {archivo, anio, codSap, codAlmacen}, Me.ArchivoActaOperationCompleted, userState)
        End Sub
        
        Private Sub OnArchivoActaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArchivoActaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArchivoActaCompleted(Me, New ArchivoActaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MantenimientoUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MantenimientoUser(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("MantenimientoUser", New Object() {PI_Semilla, PI_Session, PI_XmlDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MantenimientoUserAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As String)
            Me.MantenimientoUserAsync(PI_Semilla, PI_Session, PI_XmlDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MantenimientoUserAsync(ByVal PI_Semilla As String, ByVal PI_Session As String, ByVal PI_XmlDoc As String, ByVal userState As Object)
            If (Me.MantenimientoUserOperationCompleted Is Nothing) Then
                Me.MantenimientoUserOperationCompleted = AddressOf Me.OnMantenimientoUserOperationCompleted
            End If
            Me.InvokeAsync("MantenimientoUser", New Object() {PI_Semilla, PI_Session, PI_XmlDoc}, Me.MantenimientoUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnMantenimientoUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.MantenimientoUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MantenimientoUserCompleted(Me, New MantenimientoUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LeePdfContrato", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LeePdfContrato(ByVal nombre As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("LeePdfContrato", New Object() {nombre})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub LeePdfContratoAsync(ByVal nombre As String)
            Me.LeePdfContratoAsync(nombre, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LeePdfContratoAsync(ByVal nombre As String, ByVal userState As Object)
            If (Me.LeePdfContratoOperationCompleted Is Nothing) Then
                Me.LeePdfContratoOperationCompleted = AddressOf Me.OnLeePdfContratoOperationCompleted
            End If
            Me.InvokeAsync("LeePdfContrato", New Object() {nombre}, Me.LeePdfContratoOperationCompleted, userState)
        End Sub
        
        Private Sub OnLeePdfContratoOperationCompleted(ByVal arg As Object)
            If (Not (Me.LeePdfContratoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LeePdfContratoCompleted(Me, New LeePdfContratoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EscribePdfContrato", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EscribePdfContrato(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal archivo() As Byte, ByVal nombre As String)
            Me.Invoke("EscribePdfContrato", New Object() {archivo, nombre})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EscribePdfContratoAsync(ByVal archivo() As Byte, ByVal nombre As String)
            Me.EscribePdfContratoAsync(archivo, nombre, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EscribePdfContratoAsync(ByVal archivo() As Byte, ByVal nombre As String, ByVal userState As Object)
            If (Me.EscribePdfContratoOperationCompleted Is Nothing) Then
                Me.EscribePdfContratoOperationCompleted = AddressOf Me.OnEscribePdfContratoOperationCompleted
            End If
            Me.InvokeAsync("EscribePdfContrato", New Object() {archivo, nombre}, Me.EscribePdfContratoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEscribePdfContratoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EscribePdfContratoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EscribePdfContratoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EscribePdfAdjunto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EscribePdfAdjunto(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal archivo() As Byte, ByVal dir As String, ByVal nombre As String)
            Me.Invoke("EscribePdfAdjunto", New Object() {archivo, dir, nombre})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EscribePdfAdjuntoAsync(ByVal archivo() As Byte, ByVal dir As String, ByVal nombre As String)
            Me.EscribePdfAdjuntoAsync(archivo, dir, nombre, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EscribePdfAdjuntoAsync(ByVal archivo() As Byte, ByVal dir As String, ByVal nombre As String, ByVal userState As Object)
            If (Me.EscribePdfAdjuntoOperationCompleted Is Nothing) Then
                Me.EscribePdfAdjuntoOperationCompleted = AddressOf Me.OnEscribePdfAdjuntoOperationCompleted
            End If
            Me.InvokeAsync("EscribePdfAdjunto", New Object() {archivo, dir, nombre}, Me.EscribePdfAdjuntoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEscribePdfAdjuntoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EscribePdfAdjuntoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EscribePdfAdjuntoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LeePdfAdjunto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LeePdfAdjunto(ByVal dir As String, ByVal nombre As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("LeePdfAdjunto", New Object() {dir, nombre})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub LeePdfAdjuntoAsync(ByVal dir As String, ByVal nombre As String)
            Me.LeePdfAdjuntoAsync(dir, nombre, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LeePdfAdjuntoAsync(ByVal dir As String, ByVal nombre As String, ByVal userState As Object)
            If (Me.LeePdfAdjuntoOperationCompleted Is Nothing) Then
                Me.LeePdfAdjuntoOperationCompleted = AddressOf Me.OnLeePdfAdjuntoOperationCompleted
            End If
            Me.InvokeAsync("LeePdfAdjunto", New Object() {dir, nombre}, Me.LeePdfAdjuntoOperationCompleted, userState)
        End Sub
        
        Private Sub OnLeePdfAdjuntoOperationCompleted(ByVal arg As Object)
            If (Not (Me.LeePdfAdjuntoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LeePdfAdjuntoCompleted(Me, New LeePdfAdjuntoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class FormResponse
        
        Private codErrorField As String
        
        Private msgErrorField As String
        
        Private successField As Boolean
        
        Private rootField() As Object
        
        '''<remarks/>
        Public Property codError() As String
            Get
                Return Me.codErrorField
            End Get
            Set
                Me.codErrorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property msgError() As String
            Get
                Return Me.msgErrorField
            End Get
            Set
                Me.msgErrorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property root() As Object()
            Get
                Return Me.rootField
            End Get
            Set
                Me.rootField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class cls_Stock
        
        Private bASE_UOMField As String
        
        Private dATEField As String
        
        Private lIFNRField As String
        
        Private mATNRField As String
        
        Private sTOCKField As String
        
        Private wERKSField As String
        
        Private zIDNLFField As String
        
        '''<remarks/>
        Public Property BASE_UOM() As String
            Get
                Return Me.bASE_UOMField
            End Get
            Set
                Me.bASE_UOMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [DATE]() As String
            Get
                Return Me.dATEField
            End Get
            Set
                Me.dATEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LIFNR() As String
            Get
                Return Me.lIFNRField
            End Get
            Set
                Me.lIFNRField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MATNR() As String
            Get
                Return Me.mATNRField
            End Get
            Set
                Me.mATNRField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property STOCK() As String
            Get
                Return Me.sTOCKField
            End Get
            Set
                Me.sTOCKField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WERKS() As String
            Get
                Return Me.wERKSField
            End Get
            Set
                Me.wERKSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ZIDNLF() As String
            Get
                Return Me.zIDNLFField
            End Get
            Set
                Me.zIDNLFField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SolProveedor
        
        Private idEmpresaField As String
        
        Private idSolicitudField As String
        
        Private tipoSolicitudField As String
        
        Private descTipoSolicitudField As String
        
        Private tipoProveedorField As String
        
        Private descProveedorField As String
        
        Private codSapProveedorField As String
        
        Private tipoIdentificacionField As String
        
        Private dEscTipoIndentificacionField As String
        
        Private identificacionField As String
        
        Private nomComercialField As String
        
        Private razonSocialField As String
        
        Private fechaSRIField As String
        
        Private sectorComercialField As String
        
        Private descSectorComercialField As String
        
        Private idiomaField As String
        
        Private descIdiomaField As String
        
        Private codGrupoProveedorField As String
        
        Private genDocElecField As String
        
        Private fechaSolicitudField As String
        
        Private estadoField As String
        
        Private descEstadoField As String
        
        Private grupoTesoreriaField As String
        
        Private descGrupoTesoreriaField As String
        
        Private cuentaAsociadaField As String
        
        Private descCuentaAsociadaField As String
        
        Private autorizacionField As String
        
        Private transfArticuProvAnteriorField As String
        
        Private depSolicitandoField As String
        
        Private responsableField As String
        
        Private aprobacionField As String
        
        Private comentarioField As String
        
        Private telfFijoField As String
        
        Private telfFijoEXTField As String
        
        Private telfMovilField As String
        
        Private telfFaxField As String
        
        Private telfFaxEXTField As String
        
        Private eMAILCorpField As String
        
        Private eMAILSRIField As String
        
        Private claseContribuyenteField As String
        
        Private descClaseContribuyenteField As String
        
        Private princlienteField As String
        
        Private totalventasField As String
        
        Private anioConstiField As String
        
        Private lineaNegocioField As String
        
        Private descLineaNegocioField As String
        
        Private plazoEntregaField As String
        
        Private despachaProvinciaField As String
        
        Private descDespachaProvinciaField As String
        
        Private grupoCuentaField As String
        
        Private descGrupoCuentaField As String
        
        Private retencionIvaField As String
        
        Private descRetencionIvaField As String
        
        Private retencionIva2Field As String
        
        Private descRetencionIva2Field As String
        
        Private retencionFuenteField As String
        
        Private descRetencionFuenteField As String
        
        Private retencionFuente2Field As String
        
        Private descRetencionFuente2Field As String
        
        Private condicionPagoField As String
        
        Private descCondicionPagoField As String
        
        Private ramoField As String
        
        Private grupoEsquemaField As String
        
        Private listaViasPagoField As String
        
        '''<remarks/>
        Public Property IdEmpresa() As String
            Get
                Return Me.idEmpresaField
            End Get
            Set
                Me.idEmpresaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdSolicitud() As String
            Get
                Return Me.idSolicitudField
            End Get
            Set
                Me.idSolicitudField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoSolicitud() As String
            Get
                Return Me.tipoSolicitudField
            End Get
            Set
                Me.tipoSolicitudField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescTipoSolicitud() As String
            Get
                Return Me.descTipoSolicitudField
            End Get
            Set
                Me.descTipoSolicitudField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoProveedor() As String
            Get
                Return Me.tipoProveedorField
            End Get
            Set
                Me.tipoProveedorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescProveedor() As String
            Get
                Return Me.descProveedorField
            End Get
            Set
                Me.descProveedorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodSapProveedor() As String
            Get
                Return Me.codSapProveedorField
            End Get
            Set
                Me.codSapProveedorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoIdentificacion() As String
            Get
                Return Me.tipoIdentificacionField
            End Get
            Set
                Me.tipoIdentificacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DEscTipoIndentificacion() As String
            Get
                Return Me.dEscTipoIndentificacionField
            End Get
            Set
                Me.dEscTipoIndentificacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Identificacion() As String
            Get
                Return Me.identificacionField
            End Get
            Set
                Me.identificacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NomComercial() As String
            Get
                Return Me.nomComercialField
            End Get
            Set
                Me.nomComercialField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RazonSocial() As String
            Get
                Return Me.razonSocialField
            End Get
            Set
                Me.razonSocialField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaSRI() As String
            Get
                Return Me.fechaSRIField
            End Get
            Set
                Me.fechaSRIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SectorComercial() As String
            Get
                Return Me.sectorComercialField
            End Get
            Set
                Me.sectorComercialField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescSectorComercial() As String
            Get
                Return Me.descSectorComercialField
            End Get
            Set
                Me.descSectorComercialField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Idioma() As String
            Get
                Return Me.idiomaField
            End Get
            Set
                Me.idiomaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescIdioma() As String
            Get
                Return Me.descIdiomaField
            End Get
            Set
                Me.descIdiomaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodGrupoProveedor() As String
            Get
                Return Me.codGrupoProveedorField
            End Get
            Set
                Me.codGrupoProveedorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GenDocElec() As String
            Get
                Return Me.genDocElecField
            End Get
            Set
                Me.genDocElecField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaSolicitud() As String
            Get
                Return Me.fechaSolicitudField
            End Get
            Set
                Me.fechaSolicitudField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Estado() As String
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescEstado() As String
            Get
                Return Me.descEstadoField
            End Get
            Set
                Me.descEstadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GrupoTesoreria() As String
            Get
                Return Me.grupoTesoreriaField
            End Get
            Set
                Me.grupoTesoreriaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescGrupoTesoreria() As String
            Get
                Return Me.descGrupoTesoreriaField
            End Get
            Set
                Me.descGrupoTesoreriaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CuentaAsociada() As String
            Get
                Return Me.cuentaAsociadaField
            End Get
            Set
                Me.cuentaAsociadaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescCuentaAsociada() As String
            Get
                Return Me.descCuentaAsociadaField
            End Get
            Set
                Me.descCuentaAsociadaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Autorizacion() As String
            Get
                Return Me.autorizacionField
            End Get
            Set
                Me.autorizacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransfArticuProvAnterior() As String
            Get
                Return Me.transfArticuProvAnteriorField
            End Get
            Set
                Me.transfArticuProvAnteriorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepSolicitando() As String
            Get
                Return Me.depSolicitandoField
            End Get
            Set
                Me.depSolicitandoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Responsable() As String
            Get
                Return Me.responsableField
            End Get
            Set
                Me.responsableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Aprobacion() As String
            Get
                Return Me.aprobacionField
            End Get
            Set
                Me.aprobacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comentario() As String
            Get
                Return Me.comentarioField
            End Get
            Set
                Me.comentarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelfFijo() As String
            Get
                Return Me.telfFijoField
            End Get
            Set
                Me.telfFijoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelfFijoEXT() As String
            Get
                Return Me.telfFijoEXTField
            End Get
            Set
                Me.telfFijoEXTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelfMovil() As String
            Get
                Return Me.telfMovilField
            End Get
            Set
                Me.telfMovilField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelfFax() As String
            Get
                Return Me.telfFaxField
            End Get
            Set
                Me.telfFaxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelfFaxEXT() As String
            Get
                Return Me.telfFaxEXTField
            End Get
            Set
                Me.telfFaxEXTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EMAILCorp() As String
            Get
                Return Me.eMAILCorpField
            End Get
            Set
                Me.eMAILCorpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EMAILSRI() As String
            Get
                Return Me.eMAILSRIField
            End Get
            Set
                Me.eMAILSRIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClaseContribuyente() As String
            Get
                Return Me.claseContribuyenteField
            End Get
            Set
                Me.claseContribuyenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescClaseContribuyente() As String
            Get
                Return Me.descClaseContribuyenteField
            End Get
            Set
                Me.descClaseContribuyenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property princliente() As String
            Get
                Return Me.princlienteField
            End Get
            Set
                Me.princlienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property totalventas() As String
            Get
                Return Me.totalventasField
            End Get
            Set
                Me.totalventasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnioConsti() As String
            Get
                Return Me.anioConstiField
            End Get
            Set
                Me.anioConstiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LineaNegocio() As String
            Get
                Return Me.lineaNegocioField
            End Get
            Set
                Me.lineaNegocioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescLineaNegocio() As String
            Get
                Return Me.descLineaNegocioField
            End Get
            Set
                Me.descLineaNegocioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PlazoEntrega() As String
            Get
                Return Me.plazoEntregaField
            End Get
            Set
                Me.plazoEntregaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DespachaProvincia() As String
            Get
                Return Me.despachaProvinciaField
            End Get
            Set
                Me.despachaProvinciaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescDespachaProvincia() As String
            Get
                Return Me.descDespachaProvinciaField
            End Get
            Set
                Me.descDespachaProvinciaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GrupoCuenta() As String
            Get
                Return Me.grupoCuentaField
            End Get
            Set
                Me.grupoCuentaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescGrupoCuenta() As String
            Get
                Return Me.descGrupoCuentaField
            End Get
            Set
                Me.descGrupoCuentaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RetencionIva() As String
            Get
                Return Me.retencionIvaField
            End Get
            Set
                Me.retencionIvaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescRetencionIva() As String
            Get
                Return Me.descRetencionIvaField
            End Get
            Set
                Me.descRetencionIvaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RetencionIva2() As String
            Get
                Return Me.retencionIva2Field
            End Get
            Set
                Me.retencionIva2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescRetencionIva2() As String
            Get
                Return Me.descRetencionIva2Field
            End Get
            Set
                Me.descRetencionIva2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RetencionFuente() As String
            Get
                Return Me.retencionFuenteField
            End Get
            Set
                Me.retencionFuenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescRetencionFuente() As String
            Get
                Return Me.descRetencionFuenteField
            End Get
            Set
                Me.descRetencionFuenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RetencionFuente2() As String
            Get
                Return Me.retencionFuente2Field
            End Get
            Set
                Me.retencionFuente2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescRetencionFuente2() As String
            Get
                Return Me.descRetencionFuente2Field
            End Get
            Set
                Me.descRetencionFuente2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CondicionPago() As String
            Get
                Return Me.condicionPagoField
            End Get
            Set
                Me.condicionPagoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescCondicionPago() As String
            Get
                Return Me.descCondicionPagoField
            End Get
            Set
                Me.descCondicionPagoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ramo() As String
            Get
                Return Me.ramoField
            End Get
            Set
                Me.ramoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GrupoEsquema() As String
            Get
                Return Me.grupoEsquemaField
            End Get
            Set
                Me.grupoEsquemaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListaViasPago() As String
            Get
                Return Me.listaViasPagoField
            End Get
            Set
                Me.listaViasPagoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SolProvDireccion
        
        Private idDireccionField As String
        
        Private idSolicitudField As String
        
        Private paisField As String
        
        Private descPaisField As String
        
        Private provinciaField As String
        
        Private descRegionField As String
        
        Private ciudadField As String
        
        Private callePrincipalField As String
        
        Private calleSecundariaField As String
        
        Private pisoEdificioField As String
        
        Private codPostalField As String
        
        Private solarField As String
        
        Private estadoField As Boolean
        
        '''<remarks/>
        Public Property IdDireccion() As String
            Get
                Return Me.idDireccionField
            End Get
            Set
                Me.idDireccionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdSolicitud() As String
            Get
                Return Me.idSolicitudField
            End Get
            Set
                Me.idSolicitudField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescPais() As String
            Get
                Return Me.descPaisField
            End Get
            Set
                Me.descPaisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Provincia() As String
            Get
                Return Me.provinciaField
            End Get
            Set
                Me.provinciaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescRegion() As String
            Get
                Return Me.descRegionField
            End Get
            Set
                Me.descRegionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ciudad() As String
            Get
                Return Me.ciudadField
            End Get
            Set
                Me.ciudadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CallePrincipal() As String
            Get
                Return Me.callePrincipalField
            End Get
            Set
                Me.callePrincipalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CalleSecundaria() As String
            Get
                Return Me.calleSecundariaField
            End Get
            Set
                Me.calleSecundariaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PisoEdificio() As String
            Get
                Return Me.pisoEdificioField
            End Get
            Set
                Me.pisoEdificioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodPostal() As String
            Get
                Return Me.codPostalField
            End Get
            Set
                Me.codPostalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Solar() As String
            Get
                Return Me.solarField
            End Get
            Set
                Me.solarField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Estado() As Boolean
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SolProvContactoCiudad
        
        Private codigoSapField As String
        
        Private identificacionField As String
        
        Private codigoAlmacenField As String
        
        Private codigoPaisField As String
        
        Private codigoCiudadField As String
        
        Private codigoRegionField As String
        
        '''<remarks/>
        Public Property codigoSap() As String
            Get
                Return Me.codigoSapField
            End Get
            Set
                Me.codigoSapField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Identificacion() As String
            Get
                Return Me.identificacionField
            End Get
            Set
                Me.identificacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property codigoAlmacen() As String
            Get
                Return Me.codigoAlmacenField
            End Get
            Set
                Me.codigoAlmacenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property codigoPais() As String
            Get
                Return Me.codigoPaisField
            End Get
            Set
                Me.codigoPaisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property codigoCiudad() As String
            Get
                Return Me.codigoCiudadField
            End Get
            Set
                Me.codigoCiudadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property codigoRegion() As String
            Get
                Return Me.codigoRegionField
            End Get
            Set
                Me.codigoRegionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SolProvContacto
        
        Private idSolContactoField As String
        
        Private idSolicitudField As String
        
        Private tipoIdentificacionField As String
        
        Private descTipoIdentificacionField As String
        
        Private identificacionField As String
        
        Private nombre2Field As String
        
        Private nombre1Field As String
        
        Private apellido2Field As String
        
        Private apellido1Field As String
        
        Private codSapContactoField As String
        
        Private preFijoField As String
        
        Private depClienteField As String
        
        Private departamentoField As String
        
        Private funcionField As String
        
        Private repLegalField As Boolean
        
        Private estadoField As Boolean
        
        Private telfFijoField As String
        
        Private telfFijoEXTField As String
        
        Private telfMovilField As String
        
        Private eMAILField As String
        
        Private descFuncionField As String
        
        Private descDepartamentoField As String
        
        Private notElectronicaField As Boolean
        
        Private notTransBancariaField As Boolean
        
        Private actasField As String
        
        '''<remarks/>
        Public Property IdSolContacto() As String
            Get
                Return Me.idSolContactoField
            End Get
            Set
                Me.idSolContactoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdSolicitud() As String
            Get
                Return Me.idSolicitudField
            End Get
            Set
                Me.idSolicitudField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoIdentificacion() As String
            Get
                Return Me.tipoIdentificacionField
            End Get
            Set
                Me.tipoIdentificacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescTipoIdentificacion() As String
            Get
                Return Me.descTipoIdentificacionField
            End Get
            Set
                Me.descTipoIdentificacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Identificacion() As String
            Get
                Return Me.identificacionField
            End Get
            Set
                Me.identificacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Nombre2() As String
            Get
                Return Me.nombre2Field
            End Get
            Set
                Me.nombre2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Nombre1() As String
            Get
                Return Me.nombre1Field
            End Get
            Set
                Me.nombre1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Apellido2() As String
            Get
                Return Me.apellido2Field
            End Get
            Set
                Me.apellido2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Apellido1() As String
            Get
                Return Me.apellido1Field
            End Get
            Set
                Me.apellido1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodSapContacto() As String
            Get
                Return Me.codSapContactoField
            End Get
            Set
                Me.codSapContactoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreFijo() As String
            Get
                Return Me.preFijoField
            End Get
            Set
                Me.preFijoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepCliente() As String
            Get
                Return Me.depClienteField
            End Get
            Set
                Me.depClienteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Departamento() As String
            Get
                Return Me.departamentoField
            End Get
            Set
                Me.departamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Funcion() As String
            Get
                Return Me.funcionField
            End Get
            Set
                Me.funcionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RepLegal() As Boolean
            Get
                Return Me.repLegalField
            End Get
            Set
                Me.repLegalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Estado() As Boolean
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelfFijo() As String
            Get
                Return Me.telfFijoField
            End Get
            Set
                Me.telfFijoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelfFijoEXT() As String
            Get
                Return Me.telfFijoEXTField
            End Get
            Set
                Me.telfFijoEXTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelfMovil() As String
            Get
                Return Me.telfMovilField
            End Get
            Set
                Me.telfMovilField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EMAIL() As String
            Get
                Return Me.eMAILField
            End Get
            Set
                Me.eMAILField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescFuncion() As String
            Get
                Return Me.descFuncionField
            End Get
            Set
                Me.descFuncionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescDepartamento() As String
            Get
                Return Me.descDepartamentoField
            End Get
            Set
                Me.descDepartamentoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NotElectronica() As Boolean
            Get
                Return Me.notElectronicaField
            End Get
            Set
                Me.notElectronicaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NotTransBancaria() As Boolean
            Get
                Return Me.notTransBancariaField
            End Get
            Set
                Me.notTransBancariaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property actas() As String
            Get
                Return Me.actasField
            End Get
            Set
                Me.actasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub envioCorreoLiciCompletedEventHandler(ByVal sender As Object, ByVal e As envioCorreoLiciCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class envioCorreoLiciCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getHorarioCitasCompletedEventHandler(ByVal sender As Object, ByVal e As getHorarioCitasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getHorarioCitasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub setSolpedidoCrossCompletedEventHandler(ByVal sender As Object, ByVal e As setSolpedidoCrossCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class setSolpedidoCrossCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub setSolcitudCitaCERCompletedEventHandler(ByVal sender As Object, ByVal e As setSolcitudCitaCERCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class setSolcitudCitaCERCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FormResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FormResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getConsultaEANCompletedEventHandler(ByVal sender As Object, ByVal e As getConsultaEANCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getConsultaEANCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsultaArtBapiCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaArtBapiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaArtBapiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub copiaXMLRINECompletedEventHandler(ByVal sender As Object, ByVal e As copiaXMLRINECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class copiaXMLRINECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub copiaTXTRINECompletedEventHandler(ByVal sender As Object, ByVal e As copiaTXTRINECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class copiaTXTRINECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsInformacionSeguraUsuarioFSCompletedEventHandler(ByVal sender As Object, ByVal e As ConsInformacionSeguraUsuarioFSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsInformacionSeguraUsuarioFSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getActualizaContactoListBDCompletedEventHandler(ByVal sender As Object, ByVal e As getActualizaContactoListBDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getActualizaContactoListBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getActualizaContactoListCompletedEventHandler(ByVal sender As Object, ByVal e As getActualizaContactoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getActualizaContactoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getProveedorContactoListCompletedEventHandler(ByVal sender As Object, ByVal e As getProveedorContactoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProveedorContactoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SolProvContacto()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SolProvContacto())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getProveedorContactoListCiudadCompletedEventHandler(ByVal sender As Object, ByVal e As getProveedorContactoListCiudadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProveedorContactoListCiudadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SolProvContactoCiudad()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SolProvContactoCiudad())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getProveedorDireccionListCompletedEventHandler(ByVal sender As Object, ByVal e As getProveedorDireccionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getProveedorDireccionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SolProvDireccion()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SolProvDireccion())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsultaProveedorBapiCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaProveedorBapiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaProveedorBapiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SolProveedor()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SolProveedor())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetConsValUsrFirstLogonCompletedEventHandler(ByVal sender As Object, ByVal e As GetConsValUsrFirstLogonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetConsValUsrFirstLogonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GrabaUsuarioAdministradorCompletedEventHandler(ByVal sender As Object, ByVal e As GrabaUsuarioAdministradorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GrabaUsuarioAdministradorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GrabaActivacionNuevoUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As GrabaActivacionNuevoUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GrabaActivacionNuevoUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetRecuperaClaveValidarCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecuperaClaveValidarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecuperaClaveValidarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CambiarClaveRecuperaCompletedEventHandler(ByVal sender As Object, ByVal e As CambiarClaveRecuperaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiarClaveRecuperaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CambiarClaveCompletedEventHandler(ByVal sender As Object, ByVal e As CambiarClaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiarClaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DesbloquearClaveCompletedEventHandler(ByVal sender As Object, ByVal e As DesbloquearClaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DesbloquearClaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GrabaUsuarioAdicionalCompletedEventHandler(ByVal sender As Object, ByVal e As GrabaUsuarioAdicionalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GrabaUsuarioAdicionalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsRolesPorOrgFSCompletedEventHandler(ByVal sender As Object, ByVal e As ConsRolesPorOrgFSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsRolesPorOrgFSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetConsTodasZonasCompletedEventHandler(ByVal sender As Object, ByVal e As GetConsTodasZonasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetConsTodasZonasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub IsPermisoUserTransOpcionCompletedEventHandler(ByVal sender As Object, ByVal e As IsPermisoUserTransOpcionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsPermisoUserTransOpcionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DatosBaseCompletedEventHandler(ByVal sender As Object, ByVal e As DatosBaseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DatosBaseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsRolesPorUsuarioFSCompletedEventHandler(ByVal sender As Object, ByVal e As ConsRolesPorUsuarioFSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsRolesPorUsuarioFSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsRolesPorListaUsuariosFSCompletedEventHandler(ByVal sender As Object, ByVal e As ConsRolesPorListaUsuariosFSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsRolesPorListaUsuariosFSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub LoginSesionUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As LoginSesionUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginSesionUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCatalogosFSCompletedEventHandler(ByVal sender As Object, ByVal e As GetCatalogosFSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCatalogosFSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub BuscarDatosStockCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarDatosStockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarDatosStockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As cls_Stock()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),cls_Stock())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsultaBandejaUsuariosAdministradoresCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaBandejaUsuariosAdministradoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaBandejaUsuariosAdministradoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsultaDatosLegacyAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDatosLegacyAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDatosLegacyAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ActualizaDatosLegacyAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizaDatosLegacyAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizaDatosLegacyAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsultaBandejaUsuariosAdicionalesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaBandejaUsuariosAdicionalesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaBandejaUsuariosAdicionalesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsultaDatosUsuarioAdministradorCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDatosUsuarioAdministradorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDatosUsuarioAdministradorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsultaActivarUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaActivarUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaActivarUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsultaDatosUsuarioAdicionalCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDatosUsuarioAdicionalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDatosUsuarioAdicionalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsSemillaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsSemillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsSemillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SubirArchivoActaCompletedEventHandler(ByVal sender As Object, ByVal e As SubirArchivoActaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SubirArchivoActaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ArchivoActaCompletedEventHandler(ByVal sender As Object, ByVal e As ArchivoActaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArchivoActaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub MantenimientoUserCompletedEventHandler(ByVal sender As Object, ByVal e As MantenimientoUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MantenimientoUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub LeePdfContratoCompletedEventHandler(ByVal sender As Object, ByVal e As LeePdfContratoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LeePdfContratoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub EscribePdfContratoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub EscribePdfAdjuntoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub LeePdfAdjuntoCompletedEventHandler(ByVal sender As Object, ByVal e As LeePdfAdjuntoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LeePdfAdjuntoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
End Namespace
